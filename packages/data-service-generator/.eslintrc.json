{
  "extends": ["../../.eslintrc.json"],
  "ignorePatterns": [
    "!**/*",
    "test",
    "src/tests/__snapshots__",
    "scripts",
    // Static and template files should not be linted
    "src/**/*.template.*",
    "src/**/static/**/*",
    // React Admin UI public files
    "src/admin/public-files",
    "src/**/package-json/**/.npmrc",
    "src/**/package-json/package.json"
  ],
  "parserOptions": {
    "project": "packages/data-service-generator/tsconfig.*?.json"
  },
  "overrides": [
    {
      // Templates
      "files": ["*.template.ts", "*.template.tsx"],
      "rules": {
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "property",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "method",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "types": ["function"],
            "format": ["camelCase", "PascalCase", "UPPER_CASE"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase", "UPPER_CASE"]
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "no-console": "error"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "no-case-declarations": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "import/no-cycle": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "property",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "types": ["function"],
            "format": ["camelCase", "PascalCase"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "objectLiteralProperty",
            "format": null
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"]
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "none"
          }
        ],
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {}
    },
    {
      "files": ["*.json"],
      "parser": "jsonc-eslint-parser",
      "rules": {
        "@nx/dependency-checks": [
          "error",
          {
            "ignoredDependencies": [
              "@amplication/util/logging",
              "@amplication/dsg-utils",
              "web-vitals"
            ],
            "includeTransitiveDependencies": true
          }
        ]
      }
    }
  ]
}
