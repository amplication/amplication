{
  "name": "amplication-client",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/amplication-client/src",
  "projectType": "application",
  "targets": {
    "update-version": {
      "executor": "nx:run-commands",
      "inputs": ["{workspaceRoot}/package.json"],
      "outputs": ["{projectRoot}/src/util/version.ts"],
      "options": {
        "command": "ts-node ./scripts/update-version.ts {args.version}",
        "cwd": "packages/amplication-client"
      }
    },
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "dependsOn": [
        "prebuild",
        "^build",
        "db:prisma:generate",
        "^db:prisma:generate",
        "^graphql:models:generate"
      ],
      "options": {
        "compiler": "babel",
        "outputPath": "dist/packages/amplication-client",
        "index": "packages/amplication-client/public/index.html",
        "baseHref": "/",
        "main": "packages/amplication-client/src/index.tsx",
        "polyfills": "packages/amplication-client/src/polyfills.ts",
        "tsConfig": "packages/amplication-client/tsconfig.app.json",
        "assets": [
          "packages/amplication-client/src/assets",
          {
            "glob": "**/*",
            "input": "packages/amplication-client/public",
            "output": "./"
          },
          {
            "glob": "scripts/entrypoint.sh",
            "input": "packages/amplication-client",
            "output": "/scripts"
          },
          {
            "glob": "scripts/inject-variables.js",
            "input": "packages/amplication-client",
            "output": "/scripts"
          }
        ],
        "scripts": [],
        "isolatedConfig": true,
        "webpackConfig": "packages/amplication-client/webpack.config.js"
      },
      "configurations": {
        "development": {
          "extractLicenses": false,
          "optimization": false,
          "sourceMap": true,
          "vendorChunk": true
        },
        "sandbox": {
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "extractLicenses": true,
          "vendorChunk": true
        },
        "staging": {
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "extractLicenses": true,
          "vendorChunk": true
        },
        "production": {
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "extractLicenses": true,
          "vendorChunk": true
        }
      }
    },
    "serve": {
      "executor": "@nx/webpack:dev-server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "amplication-client:build",
        "hmr": true,
        "open": true,
        "port": 3001
      },
      "dependsOn": ["prebuild"],
      "configurations": {
        "development": {
          "buildTarget": "amplication-client:build:development"
        },
        "sandbox": {
          "buildTarget": "amplication-client:build:sandbox"
        },
        "production": {
          "buildTarget": "amplication-client:build:production",
          "hmr": false
        }
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/amplication-client/**/*.{ts,tsx,js,jsx}"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/packages/amplication-client"],
      "options": {
        "jestConfig": "packages/amplication-client/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "deploy:static": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx build amplication-client",
          "aws s3 sync ./dist/packages/amplication-client s3://{args.bucket-name} --delete",
          "aws cloudfront create-invalidation --distribution-id '{args.distribution-id}'  --paths '/*'"
        ],
        "forwardAllArgs": false,
        "parallel": false
      },
      "configurations": {
        "sandbox": {
          "commands": [
            "nx build amplication-client --configuration=sandbox",
            "aws s3 sync ./dist/packages/amplication-client s3://{args.bucket-name} --delete",
            "aws cloudfront create-invalidation --distribution-id '{args.distribution-id}'  --paths '/*'"
          ]
        },
        "staging": {
          "commands": [
            "nx build amplication-client --configuration=staging",
            "aws s3 sync ./dist/packages/amplication-client s3://{args.bucket-name} --delete",
            "aws cloudfront create-invalidation --distribution-id '{args.distribution-id}'  --paths '/*'"
          ]
        },
        "production": {
          "commands": [
            "nx build amplication-client --configuration=production",
            "aws s3 sync ./dist/packages/amplication-client s3://{args.bucket-name} --delete",
            "aws cloudfront create-invalidation --distribution-id '{args.distribution-id}'  --paths '/*'"
          ]
        }
      }
    }
  },
  "tags": []
}
