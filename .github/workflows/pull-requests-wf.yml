name: Validate Push

on:
  workflow_dispatch:
  pull_request:
      
jobs:
  lerna:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.lerna-changed.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: npm i -g npm@7.3.0
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: pr-ci-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
              pr-ci-${{ runner.os }}-
      - name: npm ci
        run: npm ci --cache ~/.npm --prefer-offline --only=production --silent
      - name: Lerna SINCE environment 
        run: echo "SINCE=origin/$GITHUB_BASE_REF" >> $GITHUB_ENV     
      - name: Lerna Changed
        id: lerna-changed
        run: |
          echo ::set-output name=packages::$(lerna changed --json)

  my_echo:
    runs-on: ubuntu-latest
    needs:
      - lerna
    steps:
      - name: Echo previous outputs
        run: echo "${{ toJSON(needs.lerna.outputs) }}"

  step2:
    runs-on: ubuntu-latest
    needs:
      - lerna
    timeout-minutes: 45
    strategy:
      matrix:
        package: ${{ fromJSON(needs.lerna.outputs.packages) }}
    steps:
      - run: |
          echo ${{ matrix.package }}
          echo ${{ toJson(matrix.package) }}
          echo ${{ fromJson(matrix.package) }}
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v2
#        with:
#          node-version: 14.x
#      - run: npm i -g npm@7.3.0
#      - name: Cache node modules
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.npm
#            node_modules
#            */*/node_modules
#          key: pr-wf-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#              pr-wf-${{ runner.os }}-
#      - name: npm ci
#        run: npm ci --cache ~/.npm --prefer-offline --only=production --silent
