{{ include "base.deployment" (list . "amplication-server.deployment") -}}
{{- define "amplication-server.deployment" -}}
spec:
  template:  
    spec:
      containers:
        - name: '{{ .Values.name }}'
          # lifecycle:
          #   postStart:
          #     exec:
          #       command:
          #         - /bin/sh
          #         - -c
          #         - cd /var && ls && cd /var/gcp-secert && ls
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag | default .Chart.AppVersion }}"
          {{- if hasKey .Values "config" }}
          envFrom:
          - configMapRef:
              name: '{{ .Values.name }}'
          {{- end }}
          env: 
            - name: GCP
              valueFrom:
                secretKeyRef:
                  name: amplication-server
                  key: GCP
                  optional: false
            - name: GITHUB_APP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: amplication-server
                  key: GITHUB_APP_CLIENT_SECRET
                  optional: false 
            - name: GITHUB_APP_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: amplication-server
                  key: GITHUB_APP_PRIVATE_KEY
                  optional: false 
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: amplication-server
                  key: GITHUB_CLIENT_SECRET
                  optional: false
            - name: POSTGRESQL_URL
              valueFrom:
                secretKeyRef:
                  name: amplication-server
                  key: POSTGRESQL_URL
                  optional: false
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: amplication-server
                  key: POSTGRESQL_PASSWORD
                  optional: false       
            - name: ENVIRONMENT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- if hasKey .Values "service" }}
          ports:
            - containerPort: {{ .Values.service.port.target }}
          {{- end }}
      {{- if hasKey .Values.deployment "volume" }}
          volumeMounts:
            - name: {{ .Values.deployment.volume.name }}
              mountPath: {{ .Values.deployment.volume.path }}
            - name: gcp-secret
              mountPath: "/var/gcp-secret"
              readOnly: true  
      volumes:
        - name: {{ .Values.deployment.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.deployment.volume.name }}
        - name: gcp-secret
          secret:
            secretName: gcp-secret
{{- end }}
{{- end }}