cp-helm-charts:
  enabled: true
  cp-kafka:
    enabled: true
    image: confluentinc/cp-enterprise-kafka
    imageTag: 6.1.0
    prometheus:
      jmx:
        enabled: true
    podAnnotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    configurationOverrides:
      default.replication.factor: "1"
      min.insync.replicas: "1"
      auto.create.topics.enable: "true"
      num.io.threads: "8"
      num.network.threads: "5"
      num.partitions: "5"
      num.replica.fetchers: "2"
      replica.lag.time.max.ms: "30000"
      socket.receive.buffer.bytes: "102400"
      socket.request.max.bytes: "104857600"
      socket.send.buffer.bytes: "102400"
      unclean.leader.election.enable: "true"
      zookeeper.session.timeout.ms: "18000"
      log.retention.hours: "72"
    resources: {}
    heapOptions: "-Xms512M -Xmx512M"
    tolerations:
      - key: "kafka"
        operator: "Equal"
        value: "true"
    brokers: 1
    persistence:
      enabled: true
      size: 5Gi
  cp-zookeeper:
    enabled: true
    servers: 1
    image: confluentinc/cp-zookeeper
    imageTag: 6.1.0
    heapOptions: "-Xms512M -Xmx512M"
    persistence:
      enabled: true
  cp-schema-registry:
    enabled: false
  cp-kafka-rest:
    enabled: false
  cp-kafka-connect:
    enabled: false
  cp-control-center:
    enabled: false
  cp-ksql-server:
    enabled: false

postgres:
  install: false

amplication-client:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-client
    tag: "release-0-13-0" # Need to change for dev.
  service:
    hostname: app-dev.staging.amplication-dev.com
    certificatearn: arn:aws:acm:us-east-1:407256539111:certificate/bc3442ea-ddcb-4870-b4ba-79144e623d71
  config:
    env:
      REACT_APP_DATA_SOURCE: "https://server.staging.amplication-dev.com/graphql"
      REACT_APP_GITHUB_CONTROLLER_LOGIN_URL: "https://server.staging.amplication-dev.com/github"
      REACT_APP_GITHUB_CLIENT_ID: value

amplication-server:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-server
    tag: "release-0-13-0"
  postgres:
    install: false
  ingress:
    enabled: true
    hostname: server.staging.amplication-dev.com
  pvc:
    name: common-efs-claim
  config:
    env:
      GENERATE_PULL_REQUEST_TOPIC: git.internal.pull-request.request.0
      GITHUB_APP_AUTH_SCOPE: "user:email,repo,read:org"
      GITHUB_SCOPE: "user:email"
      GOOGLE_APPLICATION_CREDENTIALS: "/var/gcp-secret"
      PORT: "3000"
      NODE_ENV: "production"
      GRAPHQL_DEBUG: "0"
      PLAYGROUND_ENABLE: "0"
      BCRYPT_SALT_OR_ROUNDS: "10"
      CORS_ENABLE: "1"
      DOCKER_HOST: "tcp://docker:2375"

      HOST: "https://server.staging.amplication-dev.com"
      CLIENT_HOST: "https://app-dev.staging.amplication-dev.com"

      KAFKA_BROKERS: '["amplication-cp-kafka-headless:9092"]'
      KAFKA_CLIENT_ID: amplication-server
      KAFKA_GROUP_ID: amplication-server

      #GCP - APPS Builder
      DEFAULT_DISK: gcs
      LOCAL_DISK_ROOT: /artifacts
      CONTAINER_BUILDER_DEFAULT: cloud-build
      GCS_BUCKET: amplication-artifacts

      #GCP - APPS Deployer
      DEPLOYER_DEFAULT: gcp

      GCP_APPS_PROJECT_ID: amplication-apps
      GCP_APPS_REGION: us-east1
      GCP_APPS_TERRAFORM_STATE_BUCKET: amplication-apps-state-bucket
      GCP_APPS_DATABASE_INSTANCE: apps-database-instance
      GCP_APPS_DOMAIN: staging.amplication.app

      #GitHub App
      GITHUB_APP_APP_ID: "195638"
      GITHUB_APP_CLIENT_ID: "Iv1.7c4ec6671b7c8cd7"
      GITHUB_APP_INSTALLATION_URL: "https://github.com/apps/amplicaiton-server-staging/installations/new?state={state}"

      #GitHub OAuth App
      GITHUB_CLIENT_ID: "aa4d2f3ccd7d47cbbf71"
      GITHUB_SECRET_SECRET_NAME: "projects/948093699220/secrets/github-secret-amplication-aws/versions/1"
      GITHUB_REDIRECT_URI: "https://server.staging.amplication-dev.com/github/callback"
      CHECK_USER_ACCESS_TOPIC: authorization.internal.can-access-build.request.0
      BASE_BUILDS_FOLDER: /amplication-data/build-data

amplication-git-push-webhook-service:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-git-push-webhook-service
    tag: "release-0-13-0"
  postgres:
    install: false
  ingress:
    enabled: true
    hostname: webhook.staging.amplication-dev.com
  config:
    env:
      KAFKA_BROKERS: '["amplication-cp-kafka-headless:9092"]'
      KAFKA_CLIENT_ID: git-push-webhook
      KAFKA_GROUP_ID: amplication-git-push-webhook-service
      PORT: "3000"
      KAFKA_REPOSITORY_PUSH_QUEUE: git.external.push.event.0

amplication-git-pull-service:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-git-pull-service
    tag: "release-0-13-0"
  postgres:
    install: false
  pvc:
    name: common-efs-claim
  config:
    env:
      NODE_ENV: "production"

      #EFS
      STORAGE_PATH: amplication-data/git-data
      MAX_SNAPSHOTS: "100"

      #GitHub App
      GITHUB_APP_APP_ID: "195638"
      GITHUB_APP_CLIENT_ID: "Iv1.7c4ec6671b7c8cd7"
      GIT_DEFAULT_ORIGIN_NAME: origin
      GITHUB_APP_PRIVATE_KEY: ""

      KAFKA_BROKERS: '["amplication-cp-kafka-headless:9092"]'
      KAFKA_CLIENT_ID: git-pull
      KAFKA_GROUP_ID: amplication-git-pull-service
      KAFKA_REPOSITORY_PUSH_QUEUE: git.external.push.event.0

amplication-git-pull-request-service:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-git-pull-request-service
    tag: "release-0-13-0"
  pvc:
    name: common-efs-claim
  config:
    env:
      KAFKA_BROKERS: '["amplication-cp-kafka-headless:9092"]'
      KAFKA_CLIENT_ID: git-pull-request
      KAFKA_GROUP_ID: amplication-git-pull-request-service
      GENERATE_PULL_REQUEST_TOPIC: git.internal.pull-request.request.0
      BASE_BUILDS_FOLDER: /amplication-data/build-data
      GITHUB_APP_APP_ID: "195638"

amplication-storage-gateway:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-storage-gateway
    tag: "feature-add-services"
  config:
    env:
      PORT: "3002"
      CORS_ENABLE: "1"
      KAFKA_BROKERS: '["amplication-cp-kafka-headless:9092"]'
      KAFKA_CLIENT_ID: storage-queue-client
      KAFKA_GROUP_ID: storage-server-group
      CHECK_USER_ACCESS_TOPIC: authorization.internal.can-access-build.request.0

amplication-notifications-service:
  image:
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-notifications-service
    tag: "release-0-13-0"
  postgres:
    install: false
  config:
    env:
      KAFKA_BROKERS: '["amplication-cp-kafka-headless:9092"]'
      KAFKA_CLIENT_ID: notifications-queue-client
      KAFKA_GROUP_ID: amplication-notifications-service-group
      KAFKA_TOPIC: notification.internal.in-app-push.event.0
      PORT: 3333
